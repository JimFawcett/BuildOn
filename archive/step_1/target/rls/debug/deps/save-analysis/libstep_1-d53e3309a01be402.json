{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"c:\\github\\JimFawcett\\BuildOn\\step_1","program":"C:\\Users\\Jim\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":[],"output":"c:\\github\\JimFawcett\\BuildOn\\step_1\\target\\rls\\debug\\deps\\libstep_1-d53e3309a01be402.rmeta"},"prelude":{"crate_id":{"name":"step_1","disambiguator":[9522775596246277785,7172991870259038996]},"crate_root":"src","external_crates":[{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"c:\\github\\JimFawcett\\BuildOn\\step_1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}}],"span":{"file_name":"src\\lib.rs","byte_start":62,"byte_end":3349,"line_start":2,"line_end":98,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src\\lib.rs","byte_start":62,"byte_end":3349,"line_start":2,"line_end":98,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":9},{"krate":0,"index":16},{"krate":0,"index":14},{"krate":0,"index":12},{"krate":0,"index":3}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9},"span":{"file_name":"src\\lib.rs","byte_start":1401,"byte_end":1405,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Demo","qualname":"::Demo","value":"Demo { value, name }","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" BuildOn::step_1::lib.rs","sig":null,"attributes":[{"value":"/ BuildOn::step_1::lib.rs","span":{"file_name":"src\\lib.rs","byte_start":62,"byte_end":89,"line_start":2,"line_end":2,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"src\\lib.rs","byte_start":90,"byte_end":93,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Jim Fawcett, https://JimFawcett.github.io, 23 Nov 2020 ","span":{"file_name":"src\\lib.rs","byte_start":94,"byte_end":153,"line_start":4,"line_end":4,"column_start":1,"column_end":60}},{"value":"/ Notes:","span":{"file_name":"src\\lib.rs","byte_start":216,"byte_end":226,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/ 1. Two string types are defined in the std library","span":{"file_name":"src\\lib.rs","byte_start":227,"byte_end":281,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/    a. String is a type that manages a collection of","span":{"file_name":"src\\lib.rs","byte_start":282,"byte_end":337,"line_start":8,"line_end":8,"column_start":1,"column_end":56}},{"value":"/       utf-8 characters in the native heap.","span":{"file_name":"src\\lib.rs","byte_start":338,"byte_end":384,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/    b. str is a type that represents literal strings","span":{"file_name":"src\\lib.rs","byte_start":385,"byte_end":440,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/       stored in stack or static memory, e.g., fixed","span":{"file_name":"src\\lib.rs","byte_start":441,"byte_end":496,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/       size arrays of utf-8 characters.","span":{"file_name":"src\\lib.rs","byte_start":497,"byte_end":539,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/    c. str instances are almost always managed through","span":{"file_name":"src\\lib.rs","byte_start":540,"byte_end":597,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/       references, e.g., &str","span":{"file_name":"src\\lib.rs","byte_start":598,"byte_end":630,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/    d. It is easy to convert between String and str ","span":{"file_name":"src\\lib.rs","byte_start":631,"byte_end":686,"line_start":15,"line_end":15,"column_start":1,"column_end":56}},{"value":"/       types - see code below.","span":{"file_name":"src\\lib.rs","byte_start":687,"byte_end":720,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/ https://github.com/Dhghomon/easy_rust#strings","span":{"file_name":"src\\lib.rs","byte_start":721,"byte_end":770,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ 2. Rust uses Structs where C++ and C# use classes.","span":{"file_name":"src\\lib.rs","byte_start":771,"byte_end":825,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/    e. Methods are defined using impl blocks, as shown","span":{"file_name":"src\\lib.rs","byte_start":826,"byte_end":883,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/       below.","span":{"file_name":"src\\lib.rs","byte_start":884,"byte_end":900,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/    f. Associated methods, like new are not declared ","span":{"file_name":"src\\lib.rs","byte_start":901,"byte_end":957,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/       with a reference to self.  They act like C++","span":{"file_name":"src\\lib.rs","byte_start":958,"byte_end":1012,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/       static methods.","span":{"file_name":"src\\lib.rs","byte_start":1013,"byte_end":1038,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/    g. All other methods are declared with a reference","span":{"file_name":"src\\lib.rs","byte_start":1039,"byte_end":1096,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/       to self, which may be mutable.  On invocation,","span":{"file_name":"src\\lib.rs","byte_start":1097,"byte_end":1153,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/       &self or &mut self is passed to the method code","span":{"file_name":"src\\lib.rs","byte_start":1154,"byte_end":1211,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/       implicitly, e.g., not supplied by the using","span":{"file_name":"src\\lib.rs","byte_start":1212,"byte_end":1265,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/       code. ","span":{"file_name":"src\\lib.rs","byte_start":1266,"byte_end":1282,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/ https://github.com/Dhghomon/easy_rust#implementing-structs-and-enums","span":{"file_name":"src\\lib.rs","byte_start":1283,"byte_end":1355,"line_start":29,"line_end":29,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":10},"span":{"file_name":"src\\lib.rs","byte_start":1412,"byte_end":1417,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"value","qualname":"::Demo::value","value":"f64","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11},"span":{"file_name":"src\\lib.rs","byte_start":1428,"byte_end":1432,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"name","qualname":"::Demo::name","value":"std::string::String","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4},"span":{"file_name":"src\\lib.rs","byte_start":1467,"byte_end":1470,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Demo>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2147483653},"span":{"file_name":"src\\lib.rs","byte_start":1608,"byte_end":1612,"line_start":44,"line_end":44,"column_start":27,"column_end":31},"name":"self","qualname":"<Demo>::set_value::self","value":"&mut Demo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741829},"span":{"file_name":"src\\lib.rs","byte_start":1614,"byte_end":1615,"line_start":44,"line_end":44,"column_start":33,"column_end":34},"name":"v","qualname":"<Demo>::set_value::v","value":"f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"src\\lib.rs","byte_start":1593,"byte_end":1602,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_value","qualname":"<Demo>::set_value","value":"pub fn set_value(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2147483654},"span":{"file_name":"src\\lib.rs","byte_start":1674,"byte_end":1678,"line_start":47,"line_end":47,"column_start":23,"column_end":27},"name":"self","qualname":"<Demo>::get_value::self","value":"&Demo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"src\\lib.rs","byte_start":1663,"byte_end":1672,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"get_value","qualname":"<Demo>::get_value","value":"pub fn get_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2147483655},"span":{"file_name":"src\\lib.rs","byte_start":1739,"byte_end":1743,"line_start":50,"line_end":50,"column_start":26,"column_end":30},"name":"self","qualname":"<Demo>::set_name::self","value":"&mut Demo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741831},"span":{"file_name":"src\\lib.rs","byte_start":1745,"byte_end":1747,"line_start":50,"line_end":50,"column_start":32,"column_end":34},"name":"nm","qualname":"<Demo>::set_name::nm","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"src\\lib.rs","byte_start":1725,"byte_end":1733,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Demo>::set_name","value":"pub fn set_name(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2147483656},"span":{"file_name":"src\\lib.rs","byte_start":1821,"byte_end":1825,"line_start":53,"line_end":53,"column_start":22,"column_end":26},"name":"self","qualname":"<Demo>::get_name::self","value":"&Demo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"src\\lib.rs","byte_start":1811,"byte_end":1819,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"get_name","qualname":"<Demo>::get_name","value":"pub fn get_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"src\\lib.rs","byte_start":1449,"byte_end":1453,"line_start":37,"line_end":37,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":1434,"byte_end":1440,"line_start":34,"line_end":34,"column_start":11,"column_end":17},"ref_id":{"krate":5,"index":4932}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1412,"byte_end":1417,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"ref_id":{"krate":0,"index":10}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1428,"byte_end":1432,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"ref_id":{"krate":0,"index":11}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1412,"byte_end":1417,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"ref_id":{"krate":0,"index":10}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1428,"byte_end":1432,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"ref_id":{"krate":0,"index":11}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1412,"byte_end":1422,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"ref_id":{"krate":0,"index":10}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1428,"byte_end":1440,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"ref_id":{"krate":0,"index":11}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1412,"byte_end":1422,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"ref_id":{"krate":0,"index":10}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1428,"byte_end":1440,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"ref_id":{"krate":0,"index":11}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":1449,"byte_end":1453,"line_start":37,"line_end":37,"column_start":6,"column_end":10},"ref_id":{"krate":0,"index":9}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":1491,"byte_end":1495,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":9}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1510,"byte_end":1515,"line_start":40,"line_end":40,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":10}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1534,"byte_end":1538,"line_start":41,"line_end":41,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":11}},{"kind":"Function","span":{"file_name":"src\\lib.rs","byte_start":1548,"byte_end":1552,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"ref_id":{"krate":2,"index":1847}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":1540,"byte_end":1546,"line_start":41,"line_end":41,"column_start":19,"column_end":25},"ref_id":{"krate":5,"index":4932}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1644,"byte_end":1645,"line_start":45,"line_end":45,"column_start":22,"column_end":23},"ref_id":{"krate":0,"index":1073741829}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1631,"byte_end":1635,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2147483653}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1636,"byte_end":1641,"line_start":45,"line_end":45,"column_start":14,"column_end":19},"ref_id":{"krate":0,"index":10}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1697,"byte_end":1701,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2147483654}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1702,"byte_end":1707,"line_start":48,"line_end":48,"column_start":14,"column_end":19},"ref_id":{"krate":0,"index":10}},{"kind":"Function","span":{"file_name":"src\\lib.rs","byte_start":1784,"byte_end":1788,"line_start":51,"line_end":51,"column_start":29,"column_end":33},"ref_id":{"krate":2,"index":1847}},{"kind":"Type","span":{"file_name":"src\\lib.rs","byte_start":1776,"byte_end":1782,"line_start":51,"line_end":51,"column_start":21,"column_end":27},"ref_id":{"krate":5,"index":4932}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1789,"byte_end":1791,"line_start":51,"line_end":51,"column_start":34,"column_end":36},"ref_id":{"krate":0,"index":1073741831}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1764,"byte_end":1768,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2147483655}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1769,"byte_end":1773,"line_start":51,"line_end":51,"column_start":14,"column_end":18},"ref_id":{"krate":0,"index":11}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1846,"byte_end":1850,"line_start":54,"line_end":54,"column_start":10,"column_end":14},"ref_id":{"krate":0,"index":2147483656}},{"kind":"Variable","span":{"file_name":"src\\lib.rs","byte_start":1851,"byte_end":1855,"line_start":54,"line_end":54,"column_start":15,"column_end":19},"ref_id":{"krate":0,"index":11}}],"macro_refs":[],"relations":[{"span":{"file_name":"src\\lib.rs","byte_start":1449,"byte_end":1453,"line_start":37,"line_end":37,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":4294967295,"index":4294967295}}]}